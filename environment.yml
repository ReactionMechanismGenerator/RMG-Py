# environment.yml - conda environment specification file for RMG-Py
#
# Usage: conda env create --file environment.yml
#
# This file contains all of the software packages needed to run RMG-Py.
# There is a mixture of the following
# - packlages would could be installed at OS level, but we install here
#   for better version control
# - python tools
# - external software tools specific to chemistry
# - other software we maintain which RMG depends on
# + some other categories (see below)
#
# Changelog:
# - May 15, 2023 Added this changelog, added inline documentation,
#   made dependency list more explicit (@JacksonBurns).
# - October 16, 2023 Switched RDKit and descripatastorus to conda-forge,
#   moved diffeqpy to pip and (temporarily) removed chemprop
# - April 17, 2024 Limit versions of cclib at advice of maintainers.
# - August 4, 2024 Restricted pyrms to <2
# - May 14, 2024 Removed diffeqpy by switching to call SciMLBase and Sundials using JuliaCall
# - March 15, 2024 - started migration to Python 3.9
# - Mar 11, 2024 Removed Julia dependencies, now considered optional
#
name: rmg_env
channels:
  - conda-forge
  - rmg
dependencies:
# System-level dependencies - we could install these at the OS level
# but by installing them in the conda environment we get better control
  - conda-forge::cairo
  - conda-forge::cairocffi
  - conda-forge::ffmpeg >= 7
  - conda-forge::xlrd
  - conda-forge::xlwt
  - conda-forge::h5py
  - conda-forge::graphviz >=12
  - conda-forge::markupsafe
  - conda-forge::psutil
  # conda-forge not default, since default has a version information bug
  # (see https://github.com/ReactionMechanismGenerator/RMG-Py/pull/2421)
  - conda-forge::ncurses
  - conda-forge::suitesparse

# external software tools for chemistry
  - conda-forge::coolprop
  - conda-forge::cantera >= 3
  - conda-forge::mopac
  # see https://github.com/ReactionMechanismGenerator/RMG-Py/pull/2639#issuecomment-2050292972
  - conda-forge::cclib >=1.6.3,<1.9
  - conda-forge::openbabel >= 3
  - conda-forge::rdkit >=2022.09.1

# Python tools
  - conda-forge::python >=3.9  # leave as GEQ so that GitHub actions can add EQ w/o breaking (contradictory deps)
  - conda-forge::coverage
  - conda-forge::cython >=0.25.2
  - conda-forge::scikit-learn
  - conda-forge::scipy >=1.9
  - conda-forge::numpy >=1.10.0,<2
  - conda-forge::pydot
  - conda-forge::jinja2
  - conda-forge::jupyter
  - conda-forge::pymongo
  - conda-forge::pyparsing
  - conda-forge::pyyaml
  - conda-forge::networkx
  - conda-forge::pytest
  - conda-forge::pytest-cov
  - conda-forge::pytest-check
  - conda-forge::pyutilib
  - conda-forge::matplotlib >=1.5
  - conda-forge::mpmath
  - conda-forge::pandas
  - conda-forge::gprof2dot
  - conda-forge::numdifftools
  # bug in quantities, see:
  # https://github.com/ReactionMechanismGenerator/RMG-Py/pull/2694#issuecomment-2489286263
  - conda-forge::quantities !=0.16.0,!=0.16.1
  - conda-forge::ringdecomposerlib-python

# packages we maintain
  - rmg::pydas >=1.0.3
  - rmg::pydqed >=1.0.3
  - rmg::symmetry

# configure packages to use OpenBLAS instead of Intel MKL
  - blas=*=openblas

# optional dependencies for using ReactionMechanismSimulator
# remove the leading '#' to install the required dependencies
  # - conda-forge::pyjuliacall

# additional packages that are required, but not specified here (and why)
  # pydqed, pydas, mopac, and likely others require a fortran compiler (specifically gfortran)
  # in the environment. Normally we would add this to the environment file with
  # - libgfortran-ng >= 10
  # but this exact package is only maintained for Linux, meaning that if we were to add
  # it here the environment creation would fail on Mac. The way it ends up working behind
  # the scenes is that conda will find a different package for Mac that provides gfortran,
  # but because we cannot specify per-platform requirements in this file we simply leave
  # it out.
